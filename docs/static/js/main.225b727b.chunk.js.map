{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,0BAAMC,SARW,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAKV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,yBAAKc,UAAU,0CACX,4BAAKJ,GACL,yBAAKK,IAAKf,EAAKgB,IAAKN,MCFnBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAERd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJqB,mBAE3BC,EAF2B,KAEpBC,EAFoB,KAiBlC,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDdoBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GACjDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aACNH,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEbfkB,EAAc,WAAM,IAAD,EACG1C,mBAAS,CAAC,cADb,mBACzB2C,EADyB,KACb5C,EADa,KAS5B,OACI,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,UCf1D8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.225b727b.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setImputValue]= useState(\"\")\n    const handleImputChange = (e) => {\n        //console.log(e.target.value)\n        setImputValue(e.target.value)       \n    }\n\n    const handleSubmit = (e)=>{\n      e.preventDefault()\n      if(inputValue.trim().length > 2 ){\n        setCategories(cats => [inputValue, ...cats])\n        setImputValue('');\n      }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleImputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=VAulZwy6ZcX7NjTpD4x0yLqhALMp6No5`\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <h4>{title}</h4>\n            <img src={url} alt={title}/>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\n// VAulZwy6ZcX7NjTpD4x0yLqhALMp6No5\nimport { GifGridItem } from './GifGridItem'\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category)\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n        <div className=\"card-grid\"> \n                {images.map((img)=>(\n                    <GifGridItem\n                        key={img.id}  \n                        {...img}\n                    />\n                ))}\n        </div> \n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\n\nexport const useFetchGifs = (category) => {\n\n        const [state, setState] = useState({\n            data: [],\n            loading: true\n        })\n\n        useEffect( ()=>{\n            getGifs(category)\n                .then( imgs=> {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n                })\n        }, [category])\n\n        return state // {data:[], loading: true}\n}\n","import React, {useState} from 'react'\nimport {AddCategory} from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp =()=> {\nconst [categories, setCategories]= useState([\"One Pounc\"])\n\n/* \nconst handleClick = () => {\n    //setCategories([...categories, \"HunterXHunter\"]);\n    setCategories( cats => [...cats, 'HunterXHunder'])\n}\n */\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid key={category} category={category}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}